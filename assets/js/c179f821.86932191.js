"use strict";(self.webpackChunkdocsite=self.webpackChunkdocsite||[]).push([[1110],{6387:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"quick-start","title":"Quick Start","description":"Build your first Ruby extension with Rust. Step-by-step tutorial with a real working example.","source":"@site/docs/quick-start.mdx","sourceDirName":".","slug":"/quick-start","permalink":"/docs/quick-start","draft":false,"unlisted":false,"editUrl":"https://github.com/oxidize-rb/rb-sys/tree/main/docsite/docs/quick-start.mdx","tags":[],"version":"current","lastUpdatedBy":"Ian Ker-Seymer","lastUpdatedAt":1754090914000,"sidebarPosition":3,"frontMatter":{"id":"quick-start","title":"Quick Start","sidebar_position":3,"keywords":["quick start","tutorial","first extension","ruby rust","example"],"description":"Build your first Ruby extension with Rust. Step-by-step tutorial with a real working example."},"sidebar":"docsSidebar","previous":{"title":"Getting Started","permalink":"/docs/getting-started"},"next":{"title":"Core Concepts","permalink":"/docs/core-concepts"}}');var r=t(4848),i=t(8453);const l={id:"quick-start",title:"Quick Start",sidebar_position:3,keywords:["quick start","tutorial","first extension","ruby rust","example"],description:"Build your first Ruby extension with Rust. Step-by-step tutorial with a real working example."},d="Quick Start: Your First Extension",a={},o=[{value:"What We&#39;re Building",id:"what-were-building",level:2},{value:"Step 1: Create Your Gem",id:"step-1-create-your-gem",level:2},{value:"Step 2: Write Your Rust Code",id:"step-2-write-your-rust-code",level:2},{value:"Add the Unicode dependency:",id:"add-the-unicode-dependency",level:3},{value:"Step 3: Build Your Extension",id:"step-3-build-your-extension",level:2},{value:"Step 4: Add Tests",id:"step-4-add-tests",level:2},{value:"Step 5: Run Tests",id:"step-5-run-tests",level:2},{value:"Step 6: Try It Yourself",id:"step-6-try-it-yourself",level:2},{value:"Publishing Your Gem",id:"publishing-your-gem",level:2},{value:"What You Learned",id:"what-you-learned",level:2},{value:"Continue Learning",id:"continue-learning",level:2},{value:"Core Concepts",id:"core-concepts",level:3},{value:"Project Setup",id:"project-setup",level:3},{value:"Working with Ruby Objects",id:"working-with-ruby-objects",level:3}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components},{Details:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"quick-start-your-first-extension",children:"Quick Start: Your First Extension"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Time:"})," 15 minutes | ",(0,r.jsx)(n.strong,{children:"Difficulty:"})," Beginner | ",(0,r.jsx)(n.strong,{children:"Prerequisites:"})," ",(0,r.jsx)(n.a,{href:"getting-started",children:"Installation complete"})]}),"\n",(0,r.jsx)(n.p,{children:"Let's build a working Ruby gem with Rust. We'll create a string manipulation library that showcases Rust's speed and safety."}),"\n",(0,r.jsx)(n.h2,{id:"what-were-building",children:"What We're Building"}),"\n",(0,r.jsxs)(n.p,{children:["A ",(0,r.jsx)(n.code,{children:"FastStrings"})," gem that provides:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"String reversal"}),"\n",(0,r.jsx)(n.li,{children:"Safe Unicode handling"}),"\n"]}),"\n",(0,r.jsx)("div",{className:"demo-preview",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:'require "fast_strings"\n\nFastStrings.reverse("Hello World!")\n# => "!dlroW olleH"\n'})})}),"\n",(0,r.jsx)(n.h2,{id:"step-1-create-your-gem",children:"Step 1: Create Your Gem"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Create a new gem with Rust support\nbundle gem --ext=rust fast_strings\ncd fast_strings\n"})}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)("summary",{children:"What did Bundler create?"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"fast_strings/\n\u251c\u2500\u2500 Gemfile              # Ruby dependencies\n\u251c\u2500\u2500 fast_strings.gemspec # Gem metadata\n\u251c\u2500\u2500 Rakefile             # Build tasks\n\u251c\u2500\u2500 ext/fast_strings/    # Rust extension\n\u2502   \u251c\u2500\u2500 Cargo.toml       # Rust dependencies\n\u2502   \u251c\u2500\u2500 extconf.rb       # Build configuration\n\u2502   \u2514\u2500\u2500 src/\n\u2502       \u2514\u2500\u2500 lib.rs        # Rust code\n\u2514\u2500\u2500 lib/\n    \u2514\u2500\u2500 fast_strings.rb  # Ruby wrapper\n"})})]}),"\n",(0,r.jsx)(n.h2,{id:"step-2-write-your-rust-code",children:"Step 2: Write Your Rust Code"}),"\n",(0,r.jsx)(n.p,{children:"Replace the default code with our fast string implementation:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-rust",children:'// ext/fast_strings/src/lib.rs\nuse magnus::{function, prelude::*, Error, Ruby};\nuse unicode_segmentation::UnicodeSegmentation;\n\n/// Reverses a string preserving Unicode grapheme clusters\nfn reverse_string(input: String) -> String {\n    input\n        .graphemes(true)  // true = extended grapheme clusters\n        .rev()\n        .collect()\n}\n\n#[magnus::init]\nfn init(ruby: &Ruby) -> Result<(), Error> {\n    let module = ruby.define_module("FastStrings")?;\n    \n    // Define our module methods\n    module.define_singleton_method("reverse", function!(reverse_string, 1))?;\n    \n    Ok(())\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"add-the-unicode-dependency",children:"Add the Unicode dependency:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",children:'# ext/fast_strings/Cargo.toml\n[package]\nname = "fast_strings"\nversion = "0.1.0"\nedition = "2021"\n\n[dependencies]\nmagnus = { version = "0.7" }\nunicode-segmentation = "1.10"\n\n[lib]\nname = "fast_strings"\ncrate-type = ["cdylib"]\n'})}),"\n",(0,r.jsx)(n.h2,{id:"step-3-build-your-extension",children:"Step 3: Build Your Extension"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Install dependencies and compile\nbundle install\nbundle exec rake compile\n"})}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)("summary",{children:"Compilation Steps"}),(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Ruby reads ",(0,r.jsx)(n.code,{children:"extconf.rb"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"create_rust_makefile"})," generates a Makefile"]}),"\n",(0,r.jsx)(n.li,{children:"Cargo compiles your Rust code"}),"\n",(0,r.jsxs)(n.li,{children:["The compiled library is copied to ",(0,r.jsx)(n.code,{children:"lib/fast_strings/"})]}),"\n"]})]}),"\n",(0,r.jsx)(n.h2,{id:"step-4-add-tests",children:"Step 4: Add Tests"}),"\n",(0,r.jsx)(n.p,{children:"Create a test file to verify our implementation:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:'# test/test_fast_strings.rb\nrequire "test_helper"\n\nclass TestFastStrings < Minitest::Test\n  def test_reverse_simple\n    assert_equal "dlrow olleh", FastStrings.reverse("hello world")\n  end\n  \n  def test_reverse_unicode\n    assert_equal "!dlroW olleH", FastStrings.reverse("Hello World!")\n  end\nend\n'})}),"\n",(0,r.jsx)(n.h2,{id:"step-5-run-tests",children:"Step 5: Run Tests"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Run the tests\nbundle exec rake test\n"})}),"\n",(0,r.jsx)(n.h2,{id:"step-6-try-it-yourself",children:"Step 6: Try It Yourself"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Open an interactive console\nbundle exec bin/console\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:'# Try the reverse function\nFastStrings.reverse("Hello, World!")\n# => "!dlroW ,olleH"\n'})}),"\n",(0,r.jsx)(n.h2,{id:"publishing-your-gem",children:"Publishing Your Gem"}),"\n",(0,r.jsx)(n.p,{children:"Ready to share your creation with the world?"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Update version in version.rb\n# Update gemspec with description and homepage\n\n# Build the gem\ngem build fast_strings.gemspec\n\n# Push to RubyGems.org\ngem push fast_strings-0.1.0.gem\n"})}),"\n",(0,r.jsx)(n.h2,{id:"what-you-learned",children:"What You Learned"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Created a Ruby gem with a Rust extension"}),"\n",(0,r.jsx)(n.li,{children:"Wrote safe, fast Rust code"}),"\n",(0,r.jsx)(n.li,{children:"Handled Unicode correctly"}),"\n",(0,r.jsx)(n.li,{children:"Added tests"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"continue-learning",children:"Continue Learning"}),"\n",(0,r.jsxs)("div",{className:"next-steps-grid",children:[(0,r.jsxs)("div",{className:"next-step-card",children:[(0,r.jsx)(n.h3,{id:"core-concepts",children:(0,r.jsx)(n.a,{href:"core-concepts",children:"Core Concepts"})}),(0,r.jsx)(n.p,{children:"Understand how rb-sys bridges Ruby and Rust"})]}),(0,r.jsxs)("div",{className:"next-step-card",children:[(0,r.jsx)(n.h3,{id:"project-setup",children:(0,r.jsx)(n.a,{href:"project-setup",children:"Project Setup"})}),(0,r.jsx)(n.p,{children:"Structure larger projects properly"})]}),(0,r.jsxs)("div",{className:"next-step-card",children:[(0,r.jsx)(n.h3,{id:"working-with-ruby-objects",children:(0,r.jsx)(n.a,{href:"working-with-ruby-objects",children:"Working with Ruby Objects"})}),(0,r.jsx)(n.p,{children:"Manipulate arrays, hashes, and more"})]})]})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>d});var s=t(6540);const r={},i=s.createContext(r);function l(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);