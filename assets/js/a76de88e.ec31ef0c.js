"use strict";(self.webpackChunkdocsite=self.webpackChunkdocsite||[]).push([[4895],{2282:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>u,frontMatter:()=>o,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"troubleshooting","title":"Troubleshooting","description":"This guide helps you diagnose and fix common issues when developing Ruby extensions with rb-sys.","source":"@site/docs/troubleshooting.mdx","sourceDirName":".","slug":"/troubleshooting","permalink":"/docs/troubleshooting","draft":false,"unlisted":false,"editUrl":"https://github.com/oxidize-rb/rb-sys/tree/main/docsite/docs/troubleshooting.mdx","tags":[],"version":"current","lastUpdatedBy":"Ian Ker-Seymer","lastUpdatedAt":1754090914000,"sidebarPosition":10,"frontMatter":{"sidebar_position":10},"sidebar":"docsSidebar","previous":{"title":"Debugging & Troubleshooting","permalink":"/docs/debugging"},"next":{"title":"Cross-Platform Development","permalink":"/docs/cross-platform"}}');var i=s(4848),l=s(8453),t=s(3779);const o={sidebar_position:10},d="Troubleshooting",a={},c=[{value:"Common Build Issues",id:"common-build-issues",level:2},{value:"Missing Ruby Headers",id:"missing-ruby-headers",level:3},{value:"Linker Errors",id:"linker-errors",level:3},{value:"Version Mismatch",id:"version-mismatch",level:3},{value:"Runtime Issues",id:"runtime-issues",level:2},{value:"Segmentation Faults",id:"segmentation-faults",level:3},{value:"Memory Leaks",id:"memory-leaks",level:3},{value:"Thread Safety Issues",id:"thread-safety-issues",level:3},{value:"Debug Techniques",id:"debug-techniques",level:2},{value:"Enable Debug Logging",id:"enable-debug-logging",level:3},{value:"GDB/LLDB Debugging",id:"gdblldb-debugging",level:3},{value:"Memory Analysis",id:"memory-analysis",level:3},{value:"Platform-Specific Issues",id:"platform-specific-issues",level:2},{value:"Windows",id:"windows",level:3},{value:"macOS",id:"macos",level:3},{value:"Linux",id:"linux",level:3},{value:"Best Practices",id:"best-practices",level:2}];function h(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"troubleshooting",children:"Troubleshooting"})}),"\n","\n",(0,i.jsx)(n.p,{children:"This guide helps you diagnose and fix common issues when developing Ruby extensions with rb-sys."}),"\n",(0,i.jsx)(t.A,{}),"\n",(0,i.jsx)(n.h2,{id:"common-build-issues",children:"Common Build Issues"}),"\n",(0,i.jsx)(n.h3,{id:"missing-ruby-headers",children:"Missing Ruby Headers"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Compilation failed: Cannot find ruby.h\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Solution"}),":"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Install Ruby development files:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Ubuntu/Debian"}),": ",(0,i.jsx)(n.code,{children:"apt-get install ruby-dev"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Fedora/RHEL"}),": ",(0,i.jsx)(n.code,{children:"dnf install ruby-devel"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"macOS"}),": Headers come with Ruby"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Windows"}),": Headers come with Ruby installation"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Verify Ruby installation:"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"ruby -v\nwhich ruby\n"})}),"\n",(0,i.jsx)(n.h3,{id:"linker-errors",children:"Linker Errors"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Undefined reference to `rb_define_module`\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Solution"}),":"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Check your Cargo.toml:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-toml",children:'[dependencies]\nrb-sys = { version = "0.9", features = ["stable-api"] }\n'})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsx)(n.li,{children:"Verify extconf.rb:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ruby",children:'require "rb_sys/mkmf"\n\ncreate_rust_makefile("my_extension")\n'})}),"\n",(0,i.jsx)(n.h3,{id:"version-mismatch",children:"Version Mismatch"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Error: Incompatible rb-sys version\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Solution"}),":\nEnsure consistent versions:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ruby",children:'# Gemfile\ngem "rb_sys", "~> 0.9.0"\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-toml",children:'# Cargo.toml\n[dependencies]\nrb-sys = { version = "0.9.0", features = ["stable-api"] }\n'})}),"\n",(0,i.jsx)(n.h2,{id:"runtime-issues",children:"Runtime Issues"}),"\n",(0,i.jsx)(n.h3,{id:"segmentation-faults",children:"Segmentation Faults"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"[BUG] Segmentation fault\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Common Causes"}),":"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Accessing deallocated Ruby objects"}),"\n",(0,i.jsx)(n.li,{children:"Missing GC mark implementation"}),"\n",(0,i.jsx)(n.li,{children:"Thread safety issues"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Solution"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-rust",children:'use magnus::{DataTypeFunctions, TypedData, Value, gc::Marker};\n\n#[derive(TypedData)]\n#[magnus(class = "MyClass", mark)]\nstruct MyObject {\n    // Hold references properly\n    data: Value\n}\n\n// SAFETY: MyObject is only accessed from Ruby threads with the GVL\nunsafe impl Send for MyObject {}\n\nimpl DataTypeFunctions for MyObject {\n    fn mark(&self, marker: &Marker) {\n        // Mark all Ruby objects\n        marker.mark(self.data);\n    }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"memory-leaks",children:"Memory Leaks"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Symptoms"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Growing memory usage"}),"\n",(0,i.jsx)(n.li,{children:"Slow performance over time"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Solution"}),":"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Enable debugging:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-rust",children:"use std::sync::atomic::{AtomicUsize, Ordering};\n\n#[cfg(debug_assertions)]\nstatic ALLOCATION_COUNT: AtomicUsize = AtomicUsize::new(0);\n\nfn track_allocation() {\n    #[cfg(debug_assertions)]\n    ALLOCATION_COUNT.fetch_add(1, Ordering::SeqCst);\n}\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsx)(n.li,{children:"Use memory profiling:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ruby",children:"GC.start\nGC.stat\n"})}),"\n",(0,i.jsx)(n.h3,{id:"thread-safety-issues",children:"Thread Safety Issues"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"ThreadError: deadlock detected\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Solution"}),":"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Use proper thread safety patterns:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-rust",children:'use std::sync::Mutex;\nuse magnus::{Error, Value};\n\nstruct ThreadSafeObject {\n    data: Mutex<Vec<Value>>\n}\n\n// SAFETY: ThreadSafeObject uses proper synchronization via Mutex\nunsafe impl Send for ThreadSafeObject {}\nunsafe impl Sync for ThreadSafeObject {}\n\nimpl ThreadSafeObject {\n    fn modify_data(&self) -> Result<(), Error> {\n        let mut data = self.data.lock().map_err(|_| Error::new(magnus::exception::runtime_error(), "Failed to acquire lock"))?;\n        // Modify data safely\n        Ok(())\n    }\n}\n'})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsx)(n.li,{children:"Release GVL when appropriate:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-rust",children:'use rb_sys::rb_thread_call_without_gvl;\nuse std::ptr;\nuse std::os::raw::c_void;\n\nextern "C" fn heavy_computation(data: *mut c_void) -> *mut c_void {\n    // Your CPU-intensive work here\n    // This runs without holding the GVL\n    ptr::null_mut()\n}\n\nfn release_gvl_example() {\n    unsafe {\n        rb_thread_call_without_gvl(\n            Some(heavy_computation),\n            ptr::null_mut(),\n            None,\n            ptr::null_mut()\n        );\n    }\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"debug-techniques",children:"Debug Techniques"}),"\n",(0,i.jsx)(n.h3,{id:"enable-debug-logging",children:"Enable Debug Logging"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Set environment variables:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"export RUST_BACKTRACE=1\nexport RUST_LOG=debug\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsx)(n.li,{children:"Add logging to your code:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-rust",children:'use log::{debug, error};\nuse magnus::Error;\n\nfn process_data(input: &str) -> Result<String, Error> {\n    debug!("Processing: {}", input);\n    // Processing logic\n    let error_condition = false; // Example condition\n    let result = String::from("processed"); // Example result\n    \n    if error_condition {\n        let error = "example error";\n        error!("Failed to process: {}", error);\n        return Err(Error::new(\n            magnus::exception::runtime_error(),\n            "Processing failed"\n        ));\n    }\n    Ok(result)\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"gdblldb-debugging",children:"GDB/LLDB Debugging"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Compile with debug symbols:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-toml",children:"[profile.dev]\ndebug = true\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsx)(n.li,{children:"Run with debugger:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"lldb -- ruby -I lib test/my_test.rb\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsx)(n.li,{children:"Set breakpoints:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"(lldb) b my_extension.c:42\n(lldb) continue\n"})}),"\n",(0,i.jsx)(n.h3,{id:"memory-analysis",children:"Memory Analysis"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Use Ruby's memory profiler:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ruby",children:'require "memory_profiler"\n\nMemoryProfiler.report do\n  # Your code here\nend.pretty_print\n'})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsx)(n.li,{children:"Track object allocations:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ruby",children:'GC.stat\nobject_count = ObjectSpace.count_objects\nputs "Live objects: #{object_count[:TOTAL]}"\n'})}),"\n",(0,i.jsx)(n.h2,{id:"platform-specific-issues",children:"Platform-Specific Issues"}),"\n",(0,i.jsx)(n.h3,{id:"windows",children:"Windows"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Error linking with `link.exe`\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Solution"}),":"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Install Visual Studio build tools"}),"\n",(0,i.jsx)(n.li,{children:"Set environment:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-batch",children:'call "C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Auxiliary\\Build\\vcvars64.bat"\n'})}),"\n",(0,i.jsx)(n.h3,{id:"macos",children:"macOS"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Dyld Error: Library not loaded\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Solution"}),":"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Check library paths:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"otool -L your_extension.bundle\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsx)(n.li,{children:"Fix rpath issues:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ruby",children:'# extconf.rb\nappend_ldflags("-Wl,-rpath,@loader_path/")\n'})}),"\n",(0,i.jsx)(n.h3,{id:"linux",children:"Linux"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Error loading shared library\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Solution"}),":"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Update ldconfig:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo ldconfig\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsx)(n.li,{children:"Check library dependencies:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"ldd your_extension.so\n"})}),"\n",(0,i.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Systematic Debugging"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Start with logging"}),"\n",(0,i.jsx)(n.li,{children:"Use debugger for complex issues"}),"\n",(0,i.jsx)(n.li,{children:"Profile memory for leaks"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Error Handling"}),":"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-rust",children:'use magnus::Error;\n\nfn process_data(input: &str) -> Result<String, Error> {\n    if input.is_empty() {\n        return Err(Error::new(\n            magnus::exception::arg_error(),\n            "Input cannot be empty"\n        ));\n    }\n    // Processing logic\n    let result = format!("Processed: {}", input);\n    Ok(result)\n}\n'})}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Memory Management"}),":"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-rust",children:'use magnus::{TypedData, DataTypeFunctions, Value, gc::Marker};\n\n#[derive(TypedData)]\n#[magnus(class = "MyClass", mark)]\nstruct MyObject {\n    data: Value\n}\n\n// SAFETY: MyObject is only accessed from Ruby threads with the GVL\nunsafe impl Send for MyObject {}\n\nimpl DataTypeFunctions for MyObject {\n    fn mark(&self, marker: &Marker) {\n        marker.mark(self.data);\n    }\n}\n'})}),"\n",(0,i.jsxs)(n.ol,{start:"4",children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cross-Platform Compatibility"}),":"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-rust",children:'#[cfg(target_os = "windows")]\nfn platform_specific() {\n    // Windows-specific code\n}\n\n#[cfg(not(target_os = "windows"))]\nfn platform_specific() {\n    // Unix-like systems code\n}\n'})})]})}function u(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},3779:(e,n,s)=>{s.d(n,{A:()=>t});s(6540);const r={languageCallout:"languageCallout_VNpC",ruby:"ruby_iFYN",rust:"rust_PB7z",header:"header_itAP",icon:"icon_vHP_",title:"title_Bire",content:"content_ZrzH"};var i=s(4164),l=s(4848);function t({language:e,icon:n=!0,title:s,children:t}){const o=s||("ruby"===e?"Ruby":"Rust");return(0,l.jsxs)("div",{className:(0,i.A)(r.languageCallout,r[e]),children:[(0,l.jsxs)("div",{className:r.header,children:[n&&(0,l.jsx)("div",{className:r.icon,children:"ruby"===e?(0,l.jsxs)("svg",{viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"1.5",height:"20",width:"20",children:[(0,l.jsx)("path",{d:"M6 3h12l4 6-10 12L2 9l4-6z",strokeLinejoin:"round"}),(0,l.jsx)("path",{d:"M12 21L2 9h20",strokeLinejoin:"round"})]}):(0,l.jsxs)("svg",{viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"1.5",height:"20",width:"20",children:[(0,l.jsx)("circle",{cx:"12",cy:"12",r:"8"}),(0,l.jsx)("path",{d:"M12 4v2M12 18v2M4 12H6M18 12h2M6.34 6.34l1.42 1.42M16.24 16.24l1.42 1.42M6.34 17.66l1.42-1.42M16.24 7.76l1.42-1.42"}),(0,l.jsx)("path",{d:"M9 12a3 3 0 1 0 6 0 3 3 0 0 0-6 0z"})]})}),(0,l.jsx)("div",{className:r.title,children:o})]}),(0,l.jsx)("div",{className:r.content,children:t})]})}},8453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>o});var r=s(6540);const i={},l=r.createContext(i);function t(e){const n=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),r.createElement(l.Provider,{value:n},e.children)}}}]);