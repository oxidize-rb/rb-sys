"use strict";(self.webpackChunkdocsite=self.webpackChunkdocsite||[]).push([[643],{1776:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"contributing","title":"Contributing","description":"Learn how to contribute to rb-sys and the oxidize-rb ecosystem. Includes our Code of Conduct and development guidelines.","source":"@site/docs/contributing.mdx","sourceDirName":".","slug":"/contributing","permalink":"/docs/contributing","draft":false,"unlisted":false,"editUrl":"https://github.com/oxidize-rb/rb-sys/tree/main/docsite/docs/contributing.mdx","tags":[],"version":"current","sidebarPosition":30,"frontMatter":{"id":"contributing","title":"Contributing","sidebar_position":30,"keywords":["contributing","code of conduct","development","pull request"],"description":"Learn how to contribute to rb-sys and the oxidize-rb ecosystem. Includes our Code of Conduct and development guidelines."},"sidebar":"docsSidebar","previous":{"title":"Community and Support","permalink":"/docs/community-support"}}');var t=s(4848),r=s(8453);const l={id:"contributing",title:"Contributing",sidebar_position:30,keywords:["contributing","code of conduct","development","pull request"],description:"Learn how to contribute to rb-sys and the oxidize-rb ecosystem. Includes our Code of Conduct and development guidelines."},o="Contributing to rb-sys",d={},c=[{value:"Code of Conduct",id:"code-of-conduct",level:2},{value:"Our Pledge",id:"our-pledge",level:3},{value:"Our Standards",id:"our-standards",level:3},{value:"Enforcement",id:"enforcement",level:3},{value:"Ways to Contribute",id:"ways-to-contribute",level:2},{value:"1. Reporting Issues",id:"1-reporting-issues",level:3},{value:"2. Improving Documentation",id:"2-improving-documentation",level:3},{value:"3. Contributing Code",id:"3-contributing-code",level:3},{value:"Setting Up Development Environment",id:"setting-up-development-environment",level:4},{value:"Development Workflow",id:"development-workflow",level:4},{value:"Pull Request Process",id:"pull-request-process",level:4},{value:"4. Testing",id:"4-testing",level:3},{value:"Writing Good Tests",id:"writing-good-tests",level:4},{value:"Integration Tests",id:"integration-tests",level:4},{value:"5. Performance Improvements",id:"5-performance-improvements",level:3},{value:"Project Structure",id:"project-structure",level:2},{value:"Key Areas",id:"key-areas",level:3},{value:"Style Guidelines",id:"style-guidelines",level:2},{value:"Rust Code Style",id:"rust-code-style",level:3},{value:"Ruby Code Style",id:"ruby-code-style",level:3},{value:"Review Process",id:"review-process",level:2},{value:"What to Expect",id:"what-to-expect",level:3},{value:"Review Criteria",id:"review-criteria",level:3},{value:"Release Process",id:"release-process",level:2},{value:"Recognition",id:"recognition",level:2},{value:"Getting Help",id:"getting-help",level:2},{value:"For Contributors",id:"for-contributors",level:3},{value:"Mentorship",id:"mentorship",level:3},{value:"Thank You!",id:"thank-you",level:2},{value:"\ud83c\udf89 Ready to Contribute?",id:"-ready-to-contribute",level:3}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",input:"input",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"contributing-to-rb-sys",children:"Contributing to rb-sys"})}),"\n",(0,t.jsx)(n.p,{children:"Thank you for your interest in contributing to rb-sys! This guide will help you get started."}),"\n",(0,t.jsx)(n.h2,{id:"code-of-conduct",children:"Code of Conduct"}),"\n",(0,t.jsx)(n.h3,{id:"our-pledge",children:"Our Pledge"}),"\n",(0,t.jsx)(n.p,{children:"We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, or sexual identity and orientation."}),"\n",(0,t.jsx)(n.p,{children:"We pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community."}),"\n",(0,t.jsx)(n.h3,{id:"our-standards",children:"Our Standards"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Examples of behavior that contributes to a positive environment:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Using welcoming and inclusive language"}),"\n",(0,t.jsx)(n.li,{children:"Being respectful of differing viewpoints and experiences"}),"\n",(0,t.jsx)(n.li,{children:"Gracefully accepting constructive criticism"}),"\n",(0,t.jsx)(n.li,{children:"Focusing on what is best for the community"}),"\n",(0,t.jsx)(n.li,{children:"Showing empathy towards other community members"}),"\n",(0,t.jsx)(n.li,{children:"Helping newcomers get started"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Examples of unacceptable behavior:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"The use of sexualized language or imagery, and sexual attention or advances of any kind"}),"\n",(0,t.jsx)(n.li,{children:"Trolling, insulting or derogatory comments, and personal or political attacks"}),"\n",(0,t.jsx)(n.li,{children:"Public or private harassment"}),"\n",(0,t.jsx)(n.li,{children:"Publishing others' private information without explicit permission"}),"\n",(0,t.jsx)(n.li,{children:"Other conduct which could reasonably be considered inappropriate in a professional setting"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"enforcement",children:"Enforcement"}),"\n",(0,t.jsx)(n.p,{children:"Community leaders are responsible for clarifying and enforcing our standards. All complaints will be reviewed and investigated promptly and fairly. All community leaders are obligated to respect the privacy and security of the reporter."}),"\n",(0,t.jsx)(n.h2,{id:"ways-to-contribute",children:"Ways to Contribute"}),"\n",(0,t.jsx)(n.h3,{id:"1-reporting-issues",children:"1. Reporting Issues"}),"\n",(0,t.jsxs)(n.p,{children:["Found a bug? Have a feature request? ",(0,t.jsx)(n.a,{href:"https://github.com/oxidize-rb/rb-sys/issues",children:"Open an issue"}),"!"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Good issue reports include:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Clear, descriptive title"}),"\n",(0,t.jsx)(n.li,{children:"Steps to reproduce"}),"\n",(0,t.jsx)(n.li,{children:"Expected vs actual behavior"}),"\n",(0,t.jsx)(n.li,{children:"System information (Ruby version, OS, etc.)"}),"\n",(0,t.jsx)(n.li,{children:"Minimal reproduction code"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example issue:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-markdown",children:"## Bug: Segfault when passing nil to parse_json\n\n### Description\nThe extension crashes when passing nil to the parse_json method.\n\n### Steps to Reproduce\n1. Install gem: `gem install my_extension`\n2. Run: `MyExtension.parse_json(nil)`\n\n### Expected Behavior\nShould raise an ArgumentError\n\n### Actual Behavior\nSegmentation fault\n\n### System Info\n- Ruby: 3.2.0\n- OS: macOS 13.0\n- rb-sys: 0.9.85\n"})}),"\n",(0,t.jsx)(n.h3,{id:"2-improving-documentation",children:"2. Improving Documentation"}),"\n",(0,t.jsx)(n.p,{children:"Documentation contributions are highly valued!"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Areas to help:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Fix typos and grammar"}),"\n",(0,t.jsx)(n.li,{children:"Add examples"}),"\n",(0,t.jsx)(n.li,{children:"Clarify confusing sections"}),"\n",(0,t.jsx)(n.li,{children:"Translate documentation"}),"\n",(0,t.jsx)(n.li,{children:"Write tutorials"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Documentation standards:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Use clear, simple language"}),"\n",(0,t.jsx)(n.li,{children:"Include working code examples"}),"\n",(0,t.jsx)(n.li,{children:"Test all code snippets"}),"\n",(0,t.jsx)(n.li,{children:"Follow existing style"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"3-contributing-code",children:"3. Contributing Code"}),"\n",(0,t.jsx)(n.h4,{id:"setting-up-development-environment",children:"Setting Up Development Environment"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# 1. Fork the repository on GitHub\n\n# 2. Clone your fork\ngit clone https://github.com/YOUR_USERNAME/rb-sys.git\ncd rb-sys\n\n# 3. Add upstream remote\ngit remote add upstream https://github.com/oxidize-rb/rb-sys.git\n\n# 4. Create a branch\ngit checkout -b my-feature\n\n# 5. Install dependencies\nbundle install\ncargo build\n\n# 6. Run tests\nbundle exec rake test\ncargo test\n"})}),"\n",(0,t.jsx)(n.h4,{id:"development-workflow",children:"Development Workflow"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Write tests first"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-rust",children:"#[test]\nfn test_new_feature() {\n    assert_eq!(my_new_function(2), 4);\n}\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Implement the feature"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-rust",children:"pub fn my_new_function(x: i32) -> i32 {\n    x * 2\n}\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Run tests and linting"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"cargo test\ncargo clippy\ncargo fmt\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Update documentation"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-rust",children:"/// Doubles the input value\n///\n/// # Examples\n/// ```\n/// assert_eq!(my_new_function(2), 4);\n/// ```\npub fn my_new_function(x: i32) -> i32 {\n    x * 2\n}\n"})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"pull-request-process",children:"Pull Request Process"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Before submitting:"})}),"\n",(0,t.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Tests pass locally"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Code follows style guidelines"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Documentation updated"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Commit messages are clear"]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Branch is up to date with main"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"PR description template:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-markdown",children:"## Description\nBrief description of changes\n\n## Motivation\nWhy are these changes needed?\n\n## Changes\n- Change 1\n- Change 2\n\n## Testing\nHow were these changes tested?\n\n## Checklist\n- [ ] Tests added/updated\n- [ ] Documentation updated\n- [ ] CHANGELOG updated\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"After submitting:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Respond to reviewer feedback"}),"\n",(0,t.jsx)(n.li,{children:"Keep PR up to date with main"}),"\n",(0,t.jsx)(n.li,{children:"Be patient - reviews take time"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"4-testing",children:"4. Testing"}),"\n",(0,t.jsx)(n.h4,{id:"writing-good-tests",children:"Writing Good Tests"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-rust",children:"#[cfg(test)]\nmod tests {\n    use super::*;\n    use magnus::{Error, Ruby};\n\n    #[test]\n    fn test_basic_functionality() {\n        let ruby = unsafe { Ruby::get_unchecked() };\n        \n        ruby.init().unwrap();\n        \n        // Test happy path\n        assert_eq!(add(2, 3), 5);\n        \n        // Test edge cases\n        assert_eq!(add(0, 0), 0);\n        assert_eq!(add(-1, 1), 0);\n        \n        // Test error conditions\n        let result = divide(10, 0);\n        assert!(result.is_err());\n    }\n}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"integration-tests",children:"Integration Tests"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"# test/integration_test.rb\nrequire 'test_helper'\n\nclass IntegrationTest < Minitest::Test\n  def test_real_world_scenario\n    # Test actual usage patterns\n    data = load_test_data\n    result = MyExtension.process(data)\n    \n    assert_equal expected_output, result\n    assert_performance_criteria_met(result)\n  end\nend\n"})}),"\n",(0,t.jsx)(n.h3,{id:"5-performance-improvements",children:"5. Performance Improvements"}),"\n",(0,t.jsx)(n.p,{children:"Love making things fast? We do too!"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Performance PR guidelines:"})}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Include benchmarks showing improvement"}),"\n",(0,t.jsx)(n.li,{children:"Ensure no functionality regression"}),"\n",(0,t.jsx)(n.li,{children:"Document any trade-offs"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example benchmark:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-rust",children:'#[bench]\nfn bench_string_processing(b: &mut Bencher) {\n    let input = "test".repeat(1000);\n    \n    b.iter(|| {\n        process_string(&input)\n    });\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"project-structure",children:"Project Structure"}),"\n",(0,t.jsx)(n.p,{children:"Understanding the codebase:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"rb-sys/\n\u251c\u2500\u2500 crates/\n\u2502   \u251c\u2500\u2500 rb-sys/          # Core FFI bindings\n\u2502   \u251c\u2500\u2500 rb-sys-build/    # Build utilities\n\u2502   \u2514\u2500\u2500 rb-sys-env/      # Environment detection\n\u251c\u2500\u2500 gem/                 # Ruby gem code\n\u251c\u2500\u2500 tests/               # Integration tests\n\u251c\u2500\u2500 examples/            # Example extensions\n\u2514\u2500\u2500 docs/                # Documentation\n"})}),"\n",(0,t.jsx)(n.h3,{id:"key-areas",children:"Key Areas"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"rb-sys crate:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"src/value.rs"})," - VALUE type handling"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"src/api.rs"})," - Ruby C API bindings"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"src/macros.rs"})," - Helpful macros"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Magnus integration:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Examples of high-level API usage"}),"\n",(0,t.jsx)(n.li,{children:"Type conversion implementations"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"style-guidelines",children:"Style Guidelines"}),"\n",(0,t.jsx)(n.h3,{id:"rust-code-style",children:"Rust Code Style"}),"\n",(0,t.jsx)(n.p,{children:"Follow standard Rust conventions:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-rust",children:"// Use descriptive names\nfn calculate_fibonacci(n: u32) -> u64 {\n    // Not: fn fib(x: u32) -> u64\n}\n\n// Document public APIs\n/// Calculates the nth Fibonacci number\n///\n/// # Panics\n/// Panics if n > 93 (overflow)\npub fn fibonacci(n: u32) -> u64 {\n    // Implementation\n    unimplemented!()\n}\n\n// Use Result for errors\nfn parse_config(input: &str) -> Result<Config, Error> {\n    // Not: panic! or unwrap()\n    unimplemented!()\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"ruby-code-style",children:"Ruby Code Style"}),"\n",(0,t.jsx)(n.p,{children:"Follow Ruby community standards:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"# Use 2 spaces for indentation\ndef process_data(input)\n  return [] if input.empty?\n  \n  input.map do |item|\n    transform(item)\n  end\nend\n\n# Document with YARD\n# @param input [Array<String>] Input data\n# @return [Array<Integer>] Processed results\ndef process_data(input)\n  # ...\nend\n"})}),"\n",(0,t.jsx)(n.h2,{id:"review-process",children:"Review Process"}),"\n",(0,t.jsx)(n.h3,{id:"what-to-expect",children:"What to Expect"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Initial Review"})," (1-3 days)"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Maintainer assigns reviewers"}),"\n",(0,t.jsx)(n.li,{children:"CI runs tests"}),"\n",(0,t.jsx)(n.li,{children:"Initial feedback"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Iteration"})," (varies)"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Address feedback"}),"\n",(0,t.jsx)(n.li,{children:"Update code"}),"\n",(0,t.jsx)(n.li,{children:"Re-run tests"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Final Review"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Approval from maintainer"}),"\n",(0,t.jsx)(n.li,{children:"CI passes"}),"\n",(0,t.jsx)(n.li,{children:"Merge!"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"review-criteria",children:"Review Criteria"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Correctness"}),": Does it work?"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Testing"}),": Is it tested?"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Documentation"}),": Is it documented?"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Performance"}),": No regressions?"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Style"}),": Follows guidelines?"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Compatibility"}),": Works on all platforms?"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"release-process",children:"Release Process"}),"\n",(0,t.jsx)(n.p,{children:"rb-sys follows semantic versioning:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Patch"}),": Bug fixes (0.9.x)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Minor"}),": New features (0.x.0)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Major"}),": Breaking changes (x.0.0)"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Releases happen approximately monthly or as needed."}),"\n",(0,t.jsx)(n.h2,{id:"recognition",children:"Recognition"}),"\n",(0,t.jsx)(n.p,{children:"Contributors are recognized in:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"CHANGELOG.md"}),"\n",(0,t.jsx)(n.li,{children:"GitHub contributors page"}),"\n",(0,t.jsx)(n.li,{children:"Release notes"}),"\n",(0,t.jsx)(n.li,{children:"Annual contributor spotlight"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"getting-help",children:"Getting Help"}),"\n",(0,t.jsx)(n.h3,{id:"for-contributors",children:"For Contributors"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Slack"}),": Real-time discussion"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"GitHub Discussions"}),": Questions"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Issues"}),": Bug reports"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Draft PRs"}),": Early feedback"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"mentorship",children:"Mentorship"}),"\n",(0,t.jsx)(n.p,{children:"New to Rust or Ruby extensions? We offer:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Pairing sessions"}),"\n",(0,t.jsx)(n.li,{children:"Code review mentorship"}),"\n",(0,t.jsx)(n.li,{children:"Good first issues"}),"\n",(0,t.jsx)(n.li,{children:"Documentation tasks"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"thank-you",children:"Thank You!"}),"\n",(0,t.jsx)(n.p,{children:"Every contribution matters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\ud83d\udc1b Bug reports help us improve"}),"\n",(0,t.jsx)(n.li,{children:"\ud83d\udcdd Documentation helps others learn"}),"\n",(0,t.jsx)(n.li,{children:"\ud83d\udcbb Code makes rb-sys better"}),"\n",(0,t.jsx)(n.li,{children:"\ud83d\udcac Community support helps everyone"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)("div",{className:"success-message",children:[(0,t.jsx)(n.h3,{id:"-ready-to-contribute",children:"\ud83c\udf89 Ready to Contribute?"}),(0,t.jsxs)(n.p,{children:["Check out our ",(0,t.jsx)(n.a,{href:"https://github.com/oxidize-rb/rb-sys/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22",children:"good first issues"})," to get started!"]}),(0,t.jsxs)(n.p,{children:["Join our ",(0,t.jsx)(n.a,{href:"https://join.slack.com/t/oxidize-rb/shared_invite/zt-16zv5tqte-Vi7WfzxCesdo2TqF_RYBCw",children:"Slack"})," to say hello!"]})]})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>o});var i=s(6540);const t={},r=i.createContext(t);function l(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);