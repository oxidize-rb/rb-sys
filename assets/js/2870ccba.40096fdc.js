"use strict";(self.webpackChunkdocsite=self.webpackChunkdocsite||[]).push([[213],{6451:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"build-process","title":"The Build Process","description":"Overview","source":"@site/docs/build-process.mdx","sourceDirName":".","slug":"/build-process","permalink":"/docs/build-process","draft":false,"unlisted":false,"editUrl":"https://github.com/oxidize-rb/rb-sys/tree/main/docsite/docs/build-process.mdx","tags":[],"version":"current","sidebarPosition":8,"frontMatter":{"id":"build-process","title":"The Build Process","sidebar_position":8},"sidebar":"docsSidebar","previous":{"title":"Memory Management & Safety","permalink":"/docs/memory-management"},"next":{"title":"Examples","permalink":"/docs/examples"}}');var r=s(4848),l=s(8453);const o={id:"build-process",title:"The Build Process",sidebar_position:8},t="The Build Process",c={},a=[{value:"Overview",id:"overview",level:2},{value:"How rb-sys Compiles Your Code",id:"how-rb-sys-compiles-your-code",level:2},{value:"The Role of extconf.rb",id:"the-role-of-extconfrb",level:2},{value:"Configuration Options",id:"configuration-options",level:3},{value:"Environment Variables",id:"environment-variables",level:2},{value:"Debugging the Build Process",id:"debugging-the-build-process",level:2},{value:"1. Enable Verbose Output",id:"1-enable-verbose-output",level:3},{value:"2. Inspect Generated Files",id:"2-inspect-generated-files",level:3},{value:"3. Run Cargo Directly",id:"3-run-cargo-directly",level:3},{value:"Optimizing the Build",id:"optimizing-the-build",level:2},{value:"Development vs. Release Builds",id:"development-vs-release-builds",level:3},{value:"Cargo Configuration",id:"cargo-configuration",level:3},{value:"Build Scripts (build.rs)",id:"build-scripts-buildrs",level:3},{value:"Cross-Compilation with rb-sys-dock",id:"cross-compilation-with-rb-sys-dock",level:2},{value:"Basic Cross-Compilation",id:"basic-cross-compilation",level:3},{value:"Using rb-sys-dock Directly",id:"using-rb-sys-dock-directly",level:3},{value:"Supported Platforms",id:"supported-platforms",level:3},{value:"CI/CD with oxidize-rb/actions",id:"cicd-with-oxidize-rbactions",level:2},{value:"setup-ruby-and-rust",id:"setup-ruby-and-rust",level:3},{value:"cross-gem",id:"cross-gem",level:3},{value:"Next Steps",id:"next-steps",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"the-build-process",children:"The Build Process"})}),"\n",(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsx)(n.p,{children:"This section explains how rb-sys compiles your Rust extension, which can help with debugging issues and optimizing builds."}),"\n",(0,r.jsx)(n.h2,{id:"how-rb-sys-compiles-your-code",children:"How rb-sys Compiles Your Code"}),"\n",(0,r.jsxs)(n.p,{children:["When you run ",(0,r.jsx)(n.code,{children:"bundle exec rake compile"}),", several steps happen in sequence:"]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Ruby's ",(0,r.jsx)(n.code,{children:"mkmf"})," system reads your ",(0,r.jsx)(n.code,{children:"extconf.rb"})," file"]}),"\n",(0,r.jsxs)(n.li,{children:["The ",(0,r.jsx)(n.code,{children:"create_rust_makefile"})," function generates a Makefile"]}),"\n",(0,r.jsx)(n.li,{children:"Cargo builds your Rust code as a dynamic library"}),"\n",(0,r.jsx)(n.li,{children:"The resulting binary is copied to your gem's lib directory"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Let's examine each step in detail."}),"\n",(0,r.jsx)(n.h2,{id:"the-role-of-extconfrb",children:"The Role of extconf.rb"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"extconf.rb"})," file is the entry point for Ruby's native extension system. For rb-sys projects, it typically looks\nlike this:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:'# extconf.rb\nrequire "mkmf"\nrequire "rb_sys/mkmf"\n\ncreate_rust_makefile("my_gem/my_gem")\n'})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"create_rust_makefile"})," function:"]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Sets up the environment for compiling Rust code"}),"\n",(0,r.jsx)(n.li,{children:"Generates a Makefile with appropriate Cargo commands"}),"\n",(0,r.jsx)(n.li,{children:"Configures where the compiled library should be placed"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"configuration-options",children:"Configuration Options"}),"\n",(0,r.jsxs)(n.p,{children:["You can customize the build process by passing a block to ",(0,r.jsx)(n.code,{children:"create_rust_makefile"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:'create_rust_makefile("my_gem/my_gem") do |config|\n  # Set cargo profile (defaults to ENV["RB_SYS_CARGO_PROFILE"] or :dev)\n  config.profile = ENV.fetch("MY_GEM_PROFILE", :dev).to_sym\n\n  # Enable specific cargo features\n  config.features = ["feature1", "feature2"]\n\n  # Set environment variables for cargo\n  config.env = { "SOME_VAR" => "value" }\n\n  # Specify extra Rust flags\n  config.extra_rustflags = ["--cfg=feature=\\"custom_feature\\""]\n\n  # Clean up target directory after installation to reduce gem size\n  config.clean_after_install = true\n\n  # Force installation of Rust toolchain if not present\n  config.force_install_rust_toolchain = "stable"\n\n  # Auto-install Rust toolchain during gem installation\n  config.auto_install_rust_toolchain = true\nend\n'})}),"\n",(0,r.jsxs)(n.p,{children:["For a complete reference of all available configuration options, see the\n",(0,r.jsx)(n.a,{href:"./api-reference/rb-sys-gem-config",children:"rb_sys Gem Configuration"})," documentation."]}),"\n",(0,r.jsx)(n.h2,{id:"environment-variables",children:"Environment Variables"}),"\n",(0,r.jsx)(n.p,{children:"Several environment variables affect the build process:"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Variable"}),(0,r.jsx)(n.th,{children:"Description"}),(0,r.jsx)(n.th,{children:"Default"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"RB_SYS_CARGO_PROFILE"})}),(0,r.jsxs)(n.td,{children:["Cargo profile to use (",(0,r.jsx)(n.code,{children:"dev"})," or ",(0,r.jsx)(n.code,{children:"release"}),")"]}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"dev"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"RB_SYS_CARGO_FEATURES"})}),(0,r.jsx)(n.td,{children:"Comma-separated list of features to enable"}),(0,r.jsx)(n.td,{children:"None"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"RB_SYS_CARGO_ARGS"})}),(0,r.jsx)(n.td,{children:"Additional arguments to pass to cargo"}),(0,r.jsx)(n.td,{children:"None"})]})]})]}),"\n",(0,r.jsx)(n.p,{children:"For example:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"RB_SYS_CARGO_PROFILE=release bundle exec rake compile\n"})}),"\n",(0,r.jsx)(n.h2,{id:"debugging-the-build-process",children:"Debugging the Build Process"}),"\n",(0,r.jsx)(n.p,{children:"When things go wrong, you can debug the build process:"}),"\n",(0,r.jsx)(n.h3,{id:"1-enable-verbose-output",children:"1. Enable Verbose Output"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"bundle exec rake compile VERBOSE=1\n"})}),"\n",(0,r.jsx)(n.h3,{id:"2-inspect-generated-files",children:"2. Inspect Generated Files"}),"\n",(0,r.jsx)(n.p,{children:"Look at the generated Makefile and Cargo configuration:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"cat ext/my_gem/Makefile\n"})}),"\n",(0,r.jsx)(n.h3,{id:"3-run-cargo-directly",children:"3. Run Cargo Directly"}),"\n",(0,r.jsx)(n.p,{children:"You can run Cargo commands directly in the extension directory:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"cd ext/my_gem\ncargo build -v\n"})}),"\n",(0,r.jsx)(n.h2,{id:"optimizing-the-build",children:"Optimizing the Build"}),"\n",(0,r.jsx)(n.h3,{id:"development-vs-release-builds",children:"Development vs. Release Builds"}),"\n",(0,r.jsx)(n.p,{children:"During development, use the default dev profile for faster compilation:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"RB_SYS_CARGO_PROFILE=dev bundle exec rake compile\n"})}),"\n",(0,r.jsx)(n.p,{children:"For production releases, use the release profile for optimized performance:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"RB_SYS_CARGO_PROFILE=release bundle exec rake compile\n"})}),"\n",(0,r.jsx)(n.h3,{id:"cargo-configuration",children:"Cargo Configuration"}),"\n",(0,r.jsx)(n.p,{children:"In your Cargo.toml, you can customize optimization levels:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",children:"[profile.release]\nlto = true             # Link-time optimization\nopt-level = 3          # Maximum optimization\ncodegen-units = 1      # Optimize for size at the expense of compile time\n"})}),"\n",(0,r.jsx)(n.h3,{id:"build-scripts-buildrs",children:"Build Scripts (build.rs)"}),"\n",(0,r.jsx)(n.p,{children:"For advanced customization, you can use Rust's build script feature:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-rust",children:'// ext/my_gem/build.rs\nfn main() {\n    // Detect features at build time\n    if std::env::var("TARGET").unwrap_or_default().contains("windows") {\n        println!("cargo:rustc-cfg=feature=\\"windows\\"");\n    }\n\n    // Link to system libraries if needed\n    println!("cargo:rustc-link-lib=dylib=ssl");\n\n    // Rerun if specific files change\n    println!("cargo:rerun-if-changed=src/native_code.h");\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Remember to add this to your ",(0,r.jsx)(n.code,{children:"Cargo.toml"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",children:'# ext/my_gem/Cargo.toml\n[package]\n# ...\nbuild = "build.rs"\n'})}),"\n",(0,r.jsx)(n.h2,{id:"cross-compilation-with-rb-sys-dock",children:"Cross-Compilation with rb-sys-dock"}),"\n",(0,r.jsxs)(n.p,{children:["rb-sys can cross-compile extensions using ",(0,r.jsx)(n.code,{children:"rb-sys-dock"}),". This tool runs your build in Docker containers configured for different platforms."]}),"\n",(0,r.jsx)(n.h3,{id:"basic-cross-compilation",children:"Basic Cross-Compilation"}),"\n",(0,r.jsxs)(n.p,{children:["To set up cross-compilation with the ",(0,r.jsx)(n.code,{children:"RbSys::ExtensionTask"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:"# Rakefile\nRbSys::ExtensionTask.new(\"my_gem\", GEMSPEC) do |ext|\n  ext.lib_dir = \"lib/my_gem\"\n  ext.cross_compile = true\n  ext.cross_platform = ['x86_64-linux', 'x86_64-darwin', 'arm64-darwin']\nend\n"})}),"\n",(0,r.jsx)(n.p,{children:"Then you can cross-compile with:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"bundle exec rake native:my_gem:x86_64-linux\n"})}),"\n",(0,r.jsx)(n.h3,{id:"using-rb-sys-dock-directly",children:"Using rb-sys-dock Directly"}),"\n",(0,r.jsx)(n.p,{children:"You can also use rb-sys-dock directly:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"bundle exec rb-sys-dock --platform x86_64-linux --build\n"})}),"\n",(0,r.jsx)(n.h3,{id:"supported-platforms",children:"Supported Platforms"}),"\n",(0,r.jsx)(n.p,{children:"rb-sys supports many platforms, including:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"x86_64-linux (Linux on Intel/AMD 64-bit)"}),"\n",(0,r.jsx)(n.li,{children:"x86_64-linux-musl (Static Linux builds)"}),"\n",(0,r.jsx)(n.li,{children:"aarch64-linux (Linux on ARM64)"}),"\n",(0,r.jsx)(n.li,{children:"x86_64-darwin (macOS on Intel)"}),"\n",(0,r.jsx)(n.li,{children:"arm64-darwin (macOS on Apple Silicon)"}),"\n",(0,r.jsx)(n.li,{children:"x64-mingw-ucrt (Windows 64-bit UCRT)"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"cicd-with-oxidize-rbactions",children:"CI/CD with oxidize-rb/actions"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.a,{href:"https://github.com/oxidize-rb/actions",children:"oxidize-rb/actions"})," repository provides GitHub Actions specifically designed\nfor rb-sys projects:"]}),"\n",(0,r.jsx)(n.h3,{id:"setup-ruby-and-rust",children:"setup-ruby-and-rust"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"# .github/workflows/ci.yml\njobs:\n  test:\n    runs-on: ${{ matrix.os }}\n    strategy:\n      matrix:\n        os: [ubuntu-latest, macos-latest]\n        ruby: [3.0, 3.1, 3.2, 3.3]\n    steps:\n      - uses: actions/checkout@v4\n      - uses: oxidize-rb/actions/setup-ruby-and-rust@v1\n        with:\n          ruby-version: ${{ matrix.ruby }}\n          bundler-cache: true\n          cargo-cache: true\n      - name: Compile\n        run: bundle exec rake compile\n      - name: Test\n        run: bundle exec rake test\n"})}),"\n",(0,r.jsx)(n.h3,{id:"cross-gem",children:"cross-gem"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'# .github/workflows/cross-gem.yml\njobs:\n  cross_gems:\n    runs-on: ubuntu-latest\n    strategy:\n      matrix:\n        platform: ["x86_64-linux", "x86_64-darwin", "arm64-darwin"]\n    steps:\n      - uses: actions/checkout@v4\n      - uses: ruby/setup-ruby@v1\n        with:\n          ruby-version: "3.3"\n      - uses: oxidize-rb/actions/cross-gem@v1\n        with:\n          platform: ${{ matrix.platform }}\n'})}),"\n",(0,r.jsx)(n.p,{children:"For a complete CI/CD setup, combine these actions to test your extension on multiple Ruby versions and platforms, then\ncross-compile for release."}),"\n",(0,r.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Explore ",(0,r.jsx)(n.a,{href:"cross-platform",children:"Cross-Platform Development"})," to learn about cross-compilation."]}),"\n",(0,r.jsxs)(n.li,{children:["Learn ",(0,r.jsx)(n.a,{href:"debugging",children:"Debugging"})," techniques to troubleshoot build failures."]}),"\n",(0,r.jsxs)(n.li,{children:["See ",(0,r.jsx)(n.a,{href:"testing",children:"Testing Extensions"})," for CI/CD testing strategies."]}),"\n",(0,r.jsxs)(n.li,{children:["Dive into ",(0,r.jsx)(n.a,{href:"project-setup",children:"Project Setup"})," for organizing your gem's structure."]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>t});var i=s(6540);const r={},l=i.createContext(r);function o(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);