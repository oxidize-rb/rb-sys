"use strict";(self.webpackChunkdocsite=self.webpackChunkdocsite||[]).push([[857],{8453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>a});var l=s(6540);const i={},r=l.createContext(i);function t(e){const n=l.useContext(r);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),l.createElement(r.Provider,{value:n},e.children)}},9560:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>u,frontMatter:()=>t,metadata:()=>l,toc:()=>d});const l=JSON.parse('{"id":"getting-started","title":"Installation & Setup","description":"Install and configure everything you need to build Ruby extensions with Rust. Platform-specific guides for macOS, Linux, and Windows.","source":"@site/docs/getting-started.mdx","sourceDirName":".","slug":"/getting-started","permalink":"/docs/getting-started","draft":false,"unlisted":false,"editUrl":"https://github.com/oxidize-rb/rb-sys/tree/main/docsite/docs/getting-started.mdx","tags":[],"version":"current","lastUpdatedBy":"Ian Ker-Seymer","lastUpdatedAt":1752599549000,"sidebarPosition":2,"frontMatter":{"id":"getting-started","title":"Installation & Setup","sidebar_position":2,"keywords":["install","setup","prerequisites","ruby","rust","rb-sys"],"description":"Install and configure everything you need to build Ruby extensions with Rust. Platform-specific guides for macOS, Linux, and Windows."},"sidebar":"docsSidebar","previous":{"title":"Ruby + Rust = \u2764\ufe0f","permalink":"/docs/"},"next":{"title":"\ud83d\ude80 Quick Start (15 minutes)","permalink":"/docs/quick-start"}}');var i=s(4848),r=s(8453);const t={id:"getting-started",title:"Installation & Setup",sidebar_position:2,keywords:["install","setup","prerequisites","ruby","rust","rb-sys"],description:"Install and configure everything you need to build Ruby extensions with Rust. Platform-specific guides for macOS, Linux, and Windows."},a="Installation & Setup",o={},d=[{value:"Quick Setup Script",id:"quick-setup-script",level:2},{value:"Manual Installation",id:"manual-installation",level:2},{value:"1\ufe0f\u20e3 Ruby Setup",id:"1\ufe0f\u20e3-ruby-setup",level:3},{value:"2\ufe0f\u20e3 Rust Setup",id:"2\ufe0f\u20e3-rust-setup",level:3},{value:"3\ufe0f\u20e3 System Dependencies",id:"3\ufe0f\u20e3-system-dependencies",level:3},{value:"4\ufe0f\u20e3 Install rb_sys",id:"4\ufe0f\u20e3-install-rb_sys",level:3},{value:"\u2705 Verify Your Setup",id:"-verify-your-setup",level:2},{value:"Manual Verification",id:"manual-verification",level:3},{value:"\ud83d\udd27 Common Issues &amp; Solutions",id:"-common-issues--solutions",level:2},{value:"\ud83d\udc33 Docker Option",id:"-docker-option",level:2},{value:"Platform-Specific Notes",id:"platform-specific-notes",level:2},{value:"macOS",id:"macos",level:3},{value:"Linux",id:"linux",level:3},{value:"Windows",id:"windows",level:3},{value:"\ud83c\udfaf Next Steps",id:"-next-steps",level:2},{value:"\ud83c\udf89 Congratulations!",id:"-congratulations",level:3}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components},{Details:s}=n;return s||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"installation--setup",children:"Installation & Setup"})}),"\n",(0,i.jsx)(n.p,{children:"Get your development environment ready to build Ruby extensions with Rust. This guide covers all platforms with automated setup scripts."}),"\n",(0,i.jsx)(n.h2,{id:"quick-setup-script",children:"Quick Setup Script"}),"\n",(0,i.jsx)(n.p,{children:"Run this script to check and install everything automatically:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Download and run the setup script\ncurl -sSL https://raw.githubusercontent.com/oxidize-rb/rb-sys/main/contrib/setup.sh | bash\n\n# Or if you prefer wget:\nwget -qO- https://raw.githubusercontent.com/oxidize-rb/rb-sys/main/contrib/setup.sh | bash\n"})}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{children:"\ud83d\udd0d What does this script do?"}),(0,i.jsx)(n.p,{children:"The script:"}),(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Checks for Ruby (installs if missing)"}),"\n",(0,i.jsx)(n.li,{children:"Checks for Rust (installs if missing)"}),"\n",(0,i.jsx)(n.li,{children:"Installs required system dependencies"}),"\n",(0,i.jsx)(n.li,{children:"Installs the rb_sys gem"}),"\n",(0,i.jsx)(n.li,{children:"Verifies everything works"}),"\n"]})]}),"\n",(0,i.jsx)(n.h2,{id:"manual-installation",children:"Manual Installation"}),"\n",(0,i.jsx)(n.p,{children:"Prefer to install manually? Here's what you need:"}),"\n",(0,i.jsx)(n.h3,{id:"1\ufe0f\u20e3-ruby-setup",children:"1\ufe0f\u20e3 Ruby Setup"}),"\n",(0,i.jsxs)("tabs",{children:[(0,i.jsx)("tabItem",{value:"macos",label:"macOS",default:!0,children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Using Homebrew (recommended)\nbrew install ruby\n\n# Or using rbenv\nbrew install rbenv ruby-build\nrbenv install 3.3.0\nrbenv global 3.3.0\n\n# Or using asdf\nasdf plugin add ruby\nasdf install ruby 3.3.0\nasdf global ruby 3.3.0\n"})})}),(0,i.jsx)("tabItem",{value:"linux",label:"Linux",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Ubuntu/Debian\nsudo apt update\nsudo apt install ruby-full ruby-dev\n\n# Fedora/RHEL/CentOS\nsudo dnf install ruby ruby-devel\n\n# Arch Linux\nsudo pacman -S ruby\n\n# Or using rbenv (all distros)\ngit clone https://github.com/rbenv/rbenv.git ~/.rbenv\necho 'export PATH=\"$HOME/.rbenv/bin:$PATH\"' >> ~/.bashrc\necho 'eval \"$(rbenv init -)\"' >> ~/.bashrc\nexec $SHELL\n"})})}),(0,i.jsx)("tabItem",{value:"windows",label:"Windows",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-powershell",children:'# Using RubyInstaller (recommended)\n# Download from: https://rubyinstaller.org/\n# Choose "Ruby+Devkit" version\n\n# Or using Chocolatey\nchoco install ruby\n\n# Or using Scoop\nscoop install ruby\n'})})})]}),"\n",(0,i.jsx)(n.h3,{id:"2\ufe0f\u20e3-rust-setup",children:"2\ufe0f\u20e3 Rust Setup"}),"\n",(0,i.jsxs)("tabs",{children:[(0,i.jsx)("tabItem",{value:"all",label:"All Platforms",default:!0,children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Official Rust installer (recommended for all platforms)\ncurl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh\n\n# Follow the prompts and restart your terminal\n# Verify installation:\nrustc --version\ncargo --version\n"})})}),(0,i.jsx)("tabItem",{value:"macos-brew",label:"macOS (Homebrew)",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Alternative: Install via Homebrew\nbrew install rust\n\n# Note: rustup is preferred for easier toolchain management\n"})})}),(0,i.jsx)("tabItem",{value:"windows",label:"Windows",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-powershell",children:"# Download installer from https://rustup.rs\n# Or use Chocolatey:\nchoco install rust\n\n# Or use Scoop:\nscoop install rust\n"})})})]}),"\n",(0,i.jsx)(n.h3,{id:"3\ufe0f\u20e3-system-dependencies",children:"3\ufe0f\u20e3 System Dependencies"}),"\n",(0,i.jsxs)("tabs",{children:[(0,i.jsx)("tabItem",{value:"macos",label:"macOS",default:!0,children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Install Xcode Command Line Tools\nxcode-select --install\n\n# Install LLVM (for bindgen)\nbrew install llvm\n\n# Add to your shell profile (~/.zshrc or ~/.bash_profile):\necho 'export PATH=\"/opt/homebrew/opt/llvm/bin:$PATH\"' >> ~/.zshrc\n"})})}),(0,i.jsx)("tabItem",{value:"linux",label:"Linux",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# Ubuntu/Debian\nsudo apt install build-essential libclang-dev pkg-config\n\n# Fedora/RHEL/CentOS\nsudo dnf group install "Development Tools"\nsudo dnf install clang-devel pkgconfig\n\n# Arch Linux\nsudo pacman -S base-devel clang pkg-config\n\n# Alpine Linux\napk add build-base clang-dev pkgconfig\n'})})}),(0,i.jsx)("tabItem",{value:"windows",label:"Windows",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-powershell",children:'# Install Visual Studio Build Tools\n# Download from: https://visualstudio.microsoft.com/downloads/\n# Select "Desktop development with C++"\n\n# Or minimal installation via Chocolatey:\nchoco install visualstudio2022buildtools\nchoco install visualstudio2022-workload-vctools\n'})})})]}),"\n",(0,i.jsx)(n.h3,{id:"4\ufe0f\u20e3-install-rb_sys",children:"4\ufe0f\u20e3 Install rb_sys"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Install globally\ngem install rb_sys\n\n# Or add to your Gemfile\nbundle add rb_sys --group development\n"})}),"\n",(0,i.jsx)(n.h2,{id:"-verify-your-setup",children:"\u2705 Verify Your Setup"}),"\n",(0,i.jsx)(n.p,{children:"Run our verification script to ensure everything is properly installed:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# Check all dependencies\nruby -e "$(curl -fsSL https://raw.githubusercontent.com/oxidize-rb/rb-sys/main/contrib/check-setup.rb)"\n'})}),"\n",(0,i.jsx)(n.p,{children:"You should see output like:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"\u2705 Ruby 3.3.0 installed\n\u2705 Rust 1.75.0 installed\n\u2705 Cargo in PATH\n\u2705 C compiler found\n\u2705 libclang available\n\u2705 rb_sys gem installed\n\n\ud83c\udf89 All dependencies satisfied! You're ready to build Ruby extensions with Rust.\n"})}),"\n",(0,i.jsx)(n.h3,{id:"manual-verification",children:"Manual Verification"}),"\n",(0,i.jsx)(n.p,{children:"Alternatively, check each component manually:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Check Ruby\nruby --version  # Should be 2.6+\n\n# Check Rust\nrustc --version  # Should be 1.65+\ncargo --version\n\n# Check C compiler\ncc --version     # macOS/Linux\ncl               # Windows (in Developer Command Prompt)\n\n# Check rb_sys\ngem list rb_sys  # Should show rb_sys\n"})}),"\n",(0,i.jsx)(n.h2,{id:"-common-issues--solutions",children:"\ud83d\udd27 Common Issues & Solutions"}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{children:(0,i.jsx)("strong",{children:'Error: "libclang not found"'})}),(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Solution 1:"})," Add to your Gemfile:"]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ruby",children:'gem "libclang", "~> 14.0"\n'})}),(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Solution 2:"})," Install system libclang:"]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# macOS\nbrew install llvm\n\n# Ubuntu/Debian\nsudo apt install libclang-dev\n\n# Fedora\nsudo dnf install clang-devel\n"})})]}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{children:(0,i.jsx)("strong",{children:'Error: "Ruby headers not found"'})}),(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Solution:"})," Install Ruby development package:"]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Ubuntu/Debian\nsudo apt install ruby-dev\n\n# Fedora/RHEL\nsudo dnf install ruby-devel\n\n# macOS with Homebrew Ruby\nbrew reinstall ruby\n"})})]}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{children:(0,i.jsx)("strong",{children:'Error: "cargo not found"'})}),(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Solution:"})," Add Cargo to your PATH:"]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# Add to ~/.bashrc or ~/.zshrc\nexport PATH="$HOME/.cargo/bin:$PATH"\n\n# Reload shell\nsource ~/.bashrc  # or ~/.zshrc\n'})})]}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{children:(0,i.jsx)("strong",{children:"Windows: \"error C2039: 'sem_t': is not a member\""})}),(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Solution:"})," Use stable-x86_64-pc-windows-gnu toolchain:"]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"rustup default stable-x86_64-pc-windows-gnu\n"})})]}),"\n",(0,i.jsx)(n.h2,{id:"-docker-option",children:"\ud83d\udc33 Docker Option"}),"\n",(0,i.jsx)(n.p,{children:"Prefer containers? Use our pre-configured Docker image:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Pull the official rb-sys development image\ndocker pull ghcr.io/oxidize-rb/rb-sys-dev:latest\n\n# Run with your project mounted\ndocker run -it -v $(pwd):/workspace ghcr.io/oxidize-rb/rb-sys-dev:latest\n\n# Everything is pre-installed and ready to use!\n"})}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{children:"Dockerfile for custom setup"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dockerfile",children:"FROM rust:latest\n\n# Install Ruby and dependencies\nRUN apt-get update && apt-get install -y \\\n    ruby-full \\\n    ruby-dev \\\n    libclang-dev \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Install rb_sys\nRUN gem install rb_sys\n\nWORKDIR /workspace\n"})})]}),"\n",(0,i.jsx)(n.h2,{id:"platform-specific-notes",children:"Platform-Specific Notes"}),"\n",(0,i.jsx)(n.h3,{id:"macos",children:"macOS"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Apple Silicon (M1/M2/M3) is fully supported"}),"\n",(0,i.jsx)(n.li,{children:"Xcode Command Line Tools required (not full Xcode)"}),"\n",(0,i.jsx)(n.li,{children:"Use Homebrew for easiest dependency management"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"linux",children:"Linux"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Most distributions work out of the box"}),"\n",(0,i.jsxs)(n.li,{children:["Ensure you have glibc 2.17+ (check with ",(0,i.jsx)(n.code,{children:"ldd --version"}),")"]}),"\n",(0,i.jsx)(n.li,{children:"Alpine Linux users: you may need additional musl compatibility"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"windows",children:"Windows"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Use RubyInstaller with DevKit for best results"}),"\n",(0,i.jsx)(n.li,{children:"MSYS2 toolchain is automatically configured"}),"\n",(0,i.jsx)(n.li,{children:"WSL2 is fully supported (follow Linux instructions)"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"-next-steps",children:"\ud83c\udfaf Next Steps"}),"\n",(0,i.jsx)(n.p,{children:"Now that your environment is ready:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"quick-start",children:"\ud83d\ude80 Quick Start Guide"})})," - Build your first extension in 15 minutes"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"core-concepts",children:"\ud83d\udcda Core Concepts"})})," - Understand how rb-sys works"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"project-setup",children:"\ud83d\udd28 Project Setup"})})," - Structure your gem properly"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"examples",children:"\ud83d\udca1 Examples"})})," - Learn from real-world code"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)("div",{className:"success-message",children:[(0,i.jsx)(n.h3,{id:"-congratulations",children:"\ud83c\udf89 Congratulations!"}),(0,i.jsx)(n.p,{children:"Your development environment is ready. Let's build something amazing!"}),(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"quick-start",children:(0,i.jsx)(n.strong,{children:"Continue to Quick Start \u2192"})})})]})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}}}]);